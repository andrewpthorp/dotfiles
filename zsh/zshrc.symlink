export PATH="$HOME/.dotfiles/bin:/opt/homebrew/bin/:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/X11/bin:/usr/local/share/npm/bin:/usr/local/mysql/bin:/usr/local/share/python"
export PATH="$PATH:$HOME/code/bin"
export PATH="$PATH:$HOME/.cargo/bin"

# Go stuff
export GOPATH="$HOME/code/go"
export GOROOT="$(brew --prefix golang)/libexec"
export PATH="$PATH:$GOPATH/bin:$GOROOT/bin"

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles
export DOTFILES=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/code/

# Per https://github.com/junegunn/fzf#respecting-gitignore, this should help
# with some speed issues in pay-server / other large repositories.
# export FZF_DEFAULT_COMMAND='
#   (git ls-tree -r --name-only HEAD ||
#    find . -path "*/\.*" -prune -o -type f -print -o -type l -print |
#       sed s/^..//) 2> /dev/null'
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# source every .zsh file in this rep
for config_file ($ZSH/**/*.zsh) source $config_file

# use .localrc/.striperc for SUPER SECRET CRAP that you don't want in your
# public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi
if [[ -a ~/.meterrc ]]
then
  source ~/.meterrc
fi

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

# initialize promptinit
# autoload -Uz promptinit
# promptinit
# prompt adam1 # pure

# load every completion after autocomplete loads
# for config_file ($ZSH/**/completion.sh) source $config_file

# add rbenv to path
export PATH="$HOME/.rbenv/bin:$PATH"

# enable shims and autocompletion for rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# brew install zsh-syntax-highlighting
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Do this whenever we start a new shell
fortune | cowsay -f dragon

# Zgen (https://github.com/tarjoilija/zgen)
source "${HOME}/.zgen/zgen.zsh"

# if the init script doesn't exist
if ! zgen saved; then

  # specify plugins here
  zgen load agkozak/agkozak-zsh-prompt

  # generate the init script from plugins above
  zgen save
fi

# Init nodenv to manage node versions
eval "$(nodenv init -)"


# pnpm
export PNPM_HOME="/Users/apt/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

bindkey "\e[1;3D" backward-word
bindkey "\e[1;3C" forward-word
